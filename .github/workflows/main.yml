name: Main

on:
  push:
    branches:
      - master
  pull_request:

jobs:
  test:
    name: Test SDK
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Setup Environment
        run: |
          rustup update stable
          rustup toolchain install nightly
          rustup target add wasm32-unknown-unknown
          rustup component add rustfmt --toolchain nightly
      - name: Build for wasm
        # Check if the library target compiles. This will still allow for using
        # non-wasm functionality in tests and benchmarks but guarantees that
        # consumers of the library can use it to generate wasm bindings.
        run: cargo check --target wasm32-unknown-unknown --lib
      - name: Rustfmt
        run: cargo +nightly fmt --all -- --check
      - name: Clippy
        run: cargo clippy -- -D warnings
      - name: Test
        run: cargo test
  test_sia_js:
    name: Test JS SDK
    runs-on: ubuntu-latest
    strategy:
      matrix:
        environment: [node, chrome, firefox]
    steps:
      - uses: actions/checkout@v4
      - name: Setup Environment
        run: |
          rustup update stable
          cargo install wasm-pack
      - name: Test Browser
        if: matrix.environment != 'node'
        working-directory: sia_js
        env:
          WASM_PACK_USE_BROWSER: 1
        run: |
          wasm-pack test --headless --${{matrix.environment}}
      - name: Test node.js
        working-directory: sia_js
        run: |
          wasm-pack test --node
      - name: Build node.js
        working-directory: sia_js
        run: wasm-pack build --target=node
      - name: Build Browser
        working-directory: sia_js
        run: wasm-pack build --target=web
